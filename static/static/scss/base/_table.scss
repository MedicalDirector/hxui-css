.#{$namespace}-table {
  background-color: $hx-table-background;
  color: $hx-table;
  margin-bottom: 1.5rem;
  width: 100%;
  border-collapse: separate;

  > thead {
    > tr > th {
      vertical-align: bottom;
      border: 1px solid $hx-color-gray-light;
      border-width: 0 0 1px;
      color: $hx-table-head;
      text-transform: uppercase;
      padding: 0.6em 0.75em;
      font-weight: $hx-font-weight-boldest;
      font-size: $hx-font-size-xs;
      @include transition(0.3s);

      strong {
        font-weight: $hx-font-weight-boldest;
      }

      .#{$namespace}-icon {
        font-size: 0.75rem;
        height: 0.75rem;
        width: 0.75rem;
        line-height: 0.75rem;
      }

      a {
        cursor: pointer;

        &:link,
        &:visited,
        &:active {
          color: $hx-color-info;
        }

        &:hover {
          text-decoration: none;
          color: lighten($hx-color-info, 20%);
        }
      }

      .#{$namespace}-checkbox-control {
        margin: 0 0 -3px 0.18rem;

        > .#{$namespace}-checkbox + label {
          padding-top: 5px;
          display: initial;
          font-weight: $hx-font-weight-boldest;
          text-transform: uppercase;
          font-size: 0.8rem;
        }
      }

      // Modifiers
      &.is-narrow {
        white-space: nowrap;
        width: 1%;
      }

      &.is-text-ellipsed,
      &.is-text-elipsed {
        max-width: 0;
      }
    }
  }

  > tbody {
    // Not grouped
    &:not(.#{$namespace}-table-group) {
      > tr {
        > td,
        > th {
          border-bottom: 1px solid $hx-table-border;
          padding: 0.9em 0.75em;
          font-weight: $hx-font-weight-bolder;
          @include transition(0.3s);

          strong {
            font-weight: $hx-font-weight-boldest;
          }

          // Modifiers
          &.is-narrow {
            white-space: nowrap;
            width: 1%;
          }
        }

        // Alternating backgrounds
        &:not(.is-selected):not(.is-danger):not(.is-warning):not(.is-success):not(.is-info):not(.is-caution) {
          &:nth-child(even) {
            > th,
            > td {
              background-color: $hx-table-row-even-background;
            }
          }
        }
      }
    }

    // Grouped
    &.#{$namespace}-table-group {
      box-shadow: 0 0 8px 0 rgb(0 0 0 / 3%), 0 4px 8px 0 rgb(0 0 0 / 3%);

      > tr {
        > td,
        > th {
          @include transition(0.3s);

          font-weight: $hx-font-weight-bold;
          background-color: #fff;
          padding: 0.9rem 0.75em;
          border-top: 1px solid #e5e5e5;
          text-transform: uppercase;
          color: $hx-color-info;

          > div {
            display: flex;
            align-items: center;
            width: 100%;
            color: $hx-color-info;

            > small {
              flex: 1;
              margin-left: 1rem;
            }
          }
        }
      }
    }

    > tr > td,
    > tr > th {
      border-color: $hx-table-border;

      .#{$namespace}-checkbox-control {
        margin: 0;

        .#{$namespace}-checkbox + .#{$namespace}-label {
          padding-top: 2px;
          display: initial;
          font-weight: $hx-font-weight-normal;
        }
      }
    }

    > tr {
      > td {
        button.#{$namespace}-button .#{$namespace}-icon {
          color: $hx-color-black;
        }

        &.has-text-field {
          padding: 0.25rem;

          > textarea {
            height: 39.19px;
          }

          > input[type="text"],
          textarea {
            margin: 0;
            padding: 0.6rem;
            border-radius: 0.2rem;
            border: 1px solid lighten($hx-text, 65%);
            box-shadow: none;
            transition: 0.3s;

            &::-webkit-input-placeholder {
              /* Chrome/Opera/Safari */
              color: lighten($hx-text, 60%);
            }

            &::-moz-placeholder {
              /* Firefox 19+ */
              color: lighten($hx-text, 60%);
            }

            &:-ms-input-placeholder {
              /* IE 10+ */
              color: lighten($hx-text, 60%);
            }

            &:-moz-placeholder {
              /* Firefox 18- */
              color: lighten($hx-text, 60%);
            }

            &:focus {
              background-color: rgb(255 255 255 / 50%);
              box-shadow: inset 0 0 0 1px lighten($hx-text, 65%), inset 0 0 3px 1px rgb(0 0 0 / 10%);
            }
          }
        }

        // Modifiers
        &.is-text-ellipsed,
        &.is-text-elipsed {
          max-width: 0;
        }
      }

      &.is-danger {
        > td,
        > th {
          color: $hx-color-danger;

          div,
          span {
            color: $hx-color-danger;
          }
        }

        > td {
          background-color: rgba($hx-color-danger, 0.1);
        }
      }

      &.is-warning {
        > td,
        > th {
          color: $hx-color-warning;

          > div,
          > span:not(.#{$namespace}-badge) {
            color: $hx-color-warning;
          }
        }

        > td {
          background-color: rgba($hx-color-warning, 0.1);
        }
      }

      &.is-caution {
        > td,
        > th {
          color: $hx-color-caution;

          > div,
          > span:not(.#{$namespace}-badge) {
            color: $hx-color-caution;
          }
        }

        > td {
          background-color: rgba($hx-color-caution, 0.1);
        }
      }

      &.is-success {
        > td,
        > th {
          color: $hx-color-success;

          div,
          span {
            color: $hx-color-success;
          }
        }

        > td {
          background-color: rgba($hx-color-success, 0.1);
        }
      }

      &.is-info {
        > td,
        > th {
          color: $hx-color-info;

          div,
          span {
            color: $hx-color-info;
          }
        }

        > td {
          background-color: rgba($hx-color-info, 0.1);
        }
      }

      &.has-stripe-info {
        @include table-stripe($hx-color-info);
      }

      &.has-stripe-success {
        @include table-stripe($hx-color-success);
      }

      &.has-stripe-warning {
        @include table-stripe($hx-color-warning);
      }

      &.has-stripe-caution {
        @include table-stripe($hx-color-caution);
      }

      &.has-stripe-danger {
        @include table-stripe($hx-color-danger);
      }

      &:last-child {
        > td,
        > th {
          border-bottom-width: 0;
        }
      }
    }
  }

  > thead + tbody.#{$namespace}-table-group {
    > tr > td,
    > tr > th {
      border-top: transparent;
    }
  }

  > thead > tr,
  > tbody:not(.#{$namespace}-table-group) > tr {
    &.is-selected,
    &.is-selected:hover {
      > th,
      > td {
        background-color: rgba($hx-color-success, 0.1);
      }
    }

    &.is-focused:not(.is-selected),
    &.is-focused:hover {
      > th,
      > td {
        background-color: $hx-table-row-even-hover-background !important;
      }
    }
  }

  > tfoot {
    > tr > td,
    > tr > th {
      vertical-align: top;
      border: 2px solid $hx-table-border;
      border-width: 2px 0 0;
      color: $hx-table-head;
    }

    > tr > th {
      padding: 1.3em 0.75em;
      font-weight: $hx-font-weight-boldest;
      font-size: $hx-font-size-xs;
      text-transform: uppercase;
    }

    > tr > td {
      font-weight: $hx-font-weight-bolder;
      padding: 0.9em 0.75em;

      &.has-text-field {
        > input[type="text"] {
          margin: 0;
          padding: 0.6rem;
          border-radius: 0.2rem;
          border: 1px solid #d0d2d2;
          -webkit-box-shadow: none;
          box-shadow: none;
          -webkit-transition: 0.3s;
          transition: 0.3s;
          font-weight: $hx-font-weight-bolder;
        }
      }
    }
  }

  // TODO: find a better way to do this. !important should not be used if it can be helped.
  > tbody,
  > tfoot {
    > tr > td {
      &.is-danger {
        background-color: rgba($hx-color-danger, 0.1) !important;
        color: $hx-color-danger;
      }

      &.is-warning {
        background-color: rgba($hx-color-warning, 0.1) !important;
        color: $hx-color-warning;
      }

      &.is-caution {
        background-color: rgba($hx-color-caution, 0.1) !important;
        color: $hx-color-caution;
      }

      &.is-success {
        background-color: rgba($hx-color-success, 0.1) !important;
        color: $hx-color-success;
      }

      &.is-info {
        background-color: rgba($hx-color-info, 0.1) !important;
        color: $hx-color-info;
      }
    }
  }

  ///////////////
  // MODIFIERS //
  ///////////////

  // NARROW SPACING
  &.is-narrow {
    > thead {
      > tr > th {
        padding: 0.3em 0.5em;

        .#{$namespace}-checkbox-control {
          margin-left: 0.09rem;
        }
      }
    }

    > tbody {
      &.#{$namespace}-table-group {
        > tr > th {
          padding: 0.6rem 0.5em;
        }
      }

      > tr > td {
        padding: 0.25em 0.5em;

        &.has-text-field {
          padding: 0.25rem;

          > textarea {
            height: 26.38px;
          }

          > input[type="text"],
          textarea {
            padding: 0.2rem;

            &.is-danger {
              border-color: $hx-color-danger;
              color: $hx-color-danger;
            }

            &.is-warning {
              border-color: $hx-color-warning;
              color: $hx-color-warning;
            }

            &.is-caution {
              border-color: $hx-color-caution;
              color: $hx-color-caution;
            }

            &.is-success {
              border-color: $hx-color-success;
              color: $hx-color-success;
            }

            &.is-info {
              border-color: $hx-color-info;
              color: $hx-color-info;
            }
          }
        }
      }
    }
  }

  // HOVERABLE
  &.is-hover {
    > tbody {
      &:not(.#{$namespace}-table-group) {
        > tr:not(.is-selected) {
          &:hover {
            > td {
              background-color: $hx-table-row-even-hover-background !important;
              cursor: pointer;
            }
          }
        }
      }
    }
  }

  // STICKY HEAD
  &.has-sticky-header {
    > thead {
      > tr {
        > th,
        > td {
          position: -webkit-sticky;
          position: sticky;
          top: -1px; // positional attribute is required for position to take affect.
          background-color: #fafafa;
          z-index: 10;
        }
      }
    }
  }

  // STICKY FIRST COLUMN
  &.is-sticky-left {
    > thead,
    > tbody {
      > tr {
        > td,
        > th {
          &:first-child {
            position: -webkit-sticky;
            position: sticky;
            left: 0;
            z-index: 10;
            box-shadow: 10px 0 14px -13px rgb(211 211 214);
          }
        }
      }
    }
  }

  // STICKY LAST COLUMN
  &.is-sticky-right {
    > thead,
    > tbody {
      > tr {
        > td,
        > th {
          &:first-child {
            position: -webkit-sticky;
            position: sticky;
            right: 0;
            z-index: 10;
            box-shadow: -10px 0 14px -13px rgb(211 211 214);
          }
        }
      }
    }
  }

  // TODO: replace hardcoded colors with variables
  &.is-sticky-left,
  &.is-sticky-right {
    // LIGHT MODE
    &.is-light {
      > thead {
        > tr > th {
          background-color: #fff;
        }
      }

      > tbody {
        &:not(.#{$namespace}-table-group) {
          > tr:not(.is-selected):not(.is-danger):not(.is-warning):not(.is-success):not(.is-info):not(.is-caution) {
            &:nth-child(even) {
              > th,
              > td {
                background-color: #fafafa;
              }
            }

            &:nth-child(odd) {
              > th,
              > td {
                background-color: #fff;
              }
            }
          }
        }

        > tr {
          &.is-danger {
            > td {
              background-color: #f7e8ed;
            }
          }

          &.is-warning {
            > td {
              background-color: #fef3e9;
            }
          }

          &.is-caution {
            > td {
              background-color: #fffaef;
            }
          }

          &.is-success {
            > td {
              background-color: #ebf8f3;
            }
          }

          &.is-info {
            > td {
              background-color: #e7edf1;
            }
          }
        }
      }

      // HOVERABLE
      &.is-hover {
        > tbody {
          :not(.#{$namespace}-table-group) {
            > tr:not(.is-selected) {
              &:hover {
                > td {
                  background-color: #f2f2f2 !important;
                  cursor: pointer;
                }
              }
            }
          }
        }
      }
    }

    // DARK MODE
    &.is-dark {
      > thead {
        > tr > th {
          background-color: #f6f6f9;
        }
      }

      > tbody {
        // Not grouped
        :not(.#{$namespace}-table-group) {
          > tr:not(.is-selected):not(.is-danger):not(.is-warning):not(.is-success):not(.is-info):not(.is-caution) {
            &:nth-child(even) {
              > th,
              > td {
                background-color: #f1f1f4;
              }
            }

            &:nth-child(odd) {
              > th,
              > td {
                background-color: #f6f6f9;
              }
            }
          }
        }

        // Grouped or ungrouped
        > tr {
          &.is-danger {
            > td {
              background-color: #f7e8ed;
            }
          }

          &.is-warning {
            > td {
              background-color: #fef3e9;
            }
          }

          &.is-caution {
            > td {
              background-color: #fffaef;
            }
          }

          &.is-success {
            > td {
              background-color: #ebf8f3;
            }
          }

          &.is-info {
            > td {
              background-color: #e7edf1;
            }
          }
        }
      }

      // HOVERABLE
      &.is-hover {
        > tbody {
          &:not(.#{$namespace}-table-group) {
            > tr:not(.is-selected) {
              &:hover {
                > td {
                  background-color: #e9e9ec !important;
                  cursor: pointer;
                }
              }
            }
          }
        }
      }
    }
  }
}
