// =========
// Button
// =========

@mixin button-small {
  border-radius: $border-radius-sm;
  font-size: $font-size-xs;
}

@mixin button-medium {
  font-size: $font-size-base;
}

@mixin button-large {
  font-size: $font-size-lg;
}

.#{$namespace}-button {
  @include control;
  @include no-copy;
  border-radius: $border-radius-sm;
  background-color: $button-background;
  border: 1px solid $button-border;
  color: $button;
  cursor: pointer;
  justify-content: center;
  padding-left: .75rem;
  padding-right: .75rem;
  text-align: center;
  white-space: nowrap;
  transition: all .15s ease-in-out;
  // text-transform: uppercase;
  font-weight: 400;

  strong {
    color: inherit;
  }

  .#{$namespace}-icon-control {

    &:first-child:not(:last-child) {
      margin-left: calc(-0.1rem - 1px);
      margin-right: 0.3rem;
    }

    &:last-child:not(:first-child) {
      margin-left: 0.3rem;
      margin-right: calc(-0.1rem - 1px);
    }

    &:first-child:last-child {
      margin-left: calc(-0.375em - 1px);
      margin-right: calc(-0.375em - 1px);
    }

    &,
    &.is-small,
    &.is-medium,
    &.is-large {
      position: relative;
      top: 0;
      display: inline-block;
      font-style: normal;
      font-weight: 400;
      line-height: 1;
      -webkit-font-smoothing: antialiased;
      margin: 0;
      height: auto;
      width: auto;
      .#{$namespace}-icon {
        height: auto;
        width: auto;
      }
    }
  }

  // States
  &:hover,
  &.is-hovered {
    border-color: rgba($button-hover-border, .5);
    color: $button-hover;
    text-decoration: none;
  }

  &:focus,
  &.is-focused {
    border-color: rgba($button-focus-border, .5);
    box-shadow: 0 0 0.5em rgba($button-focus-border, 0.35);
    color: $button-focus;
    text-decoration: none;
  }

  &:active,
  &.is-active {
    border-color: rgba($button-active-border, .5);
    box-shadow: $button-shadow-inset;
    color: $button-active;
    text-decoration: none;
  }

  // Colors
  &.is-link {
    background-color: transparent;
    border-color: transparent;
    color: $text;
    text-decoration: underline;

    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused,
    &:active,
    &.is-active {
      background-color: $background-color;
      color: $text-strong;
    }
  }

  // is-primary, is-info, is-success, is-warning, is-danger
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      background-color: $color;
      border-color: transparent;
      color: $color-invert;

      &:hover,
      &.is-hovered {
        background-color: darken($color, 10%);
        border-color: transparent;
        color: findColorInvert(darken($color, 10%));
      }

      &:focus,
      &.is-focused {
        border-color: transparent;
        box-shadow: 0 0 0.5em rgba($color, 0.35);
        color: $color-invert;
      }

      &:active,
      &.is-active {
        background-color: darken($color, 5%);
        border-color: transparent;
        box-shadow: $button-shadow-inset;
        color: findColorInvert(darken($color, 5%));
      }

      &.is-loading {
        &:after {
          border-color: transparent transparent $color-invert $color-invert !important;
        }
      }

      &.is-outlined {
        background-color: transparent;
        border-color: rgba($color, .5);
        color: $color;

        &:hover,
        &:focus {
          background-color: $color;
          border-color: rgba($color, .5);
          color: $color-invert;
        }

        &.is-loading {
          &:after {
            border-color: transparent transparent $color $color !important;
          }
        }
      }
    }
  }

  &.is-transparent {
    &:hover {
      background-color: rgba(0,0,0,.05);
    }
  }

  // Sizes
  &.is-small {
    @include button-small;
    &:not(.is-round) {
      .#{$namespace}-icon-control {
        * {
          font-size: .75rem;
        }
      }
    }
  }

  &.is-medium {
    @include button-medium;
  }

  &.is-large {
    @include button-large;
  }

  // Modifiers
  &[disabled],
  &.is-disabled {
    opacity: .5;
  }

  &.is-fullwidth {
    display: flex;
    width: 100%;
  }

  &.is-loading {
    color: transparent !important;
    pointer-events: none;

    &:after {
      @include loader;
      @include center(1em);

      position: absolute !important;
    }
  }

  &.is-round {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    text-align: center;
    margin-left: .25rem;
    margin-right: .25rem;

    .#{$namespace}-icon-control {
      margin-top: 1px;
    }

    &.is-small {
      width: 2.5rem;
      height: 2.5rem;
    }

    &.is-large {
      width: 4.5rem;
      height: 4.5rem;
    }

    .hx-icon {
      &.is-large {
        height: 3rem;
      }
    }
  }

  &.is-flat {
    background-color: transparent;
    border: none;
    font-weight: 400;

    &:hover {
      background-color: rgba(black, .05);
    }

    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);

      &.is-#{$name} {
        color: $color;

        &:hover,
        &.is-hovered {
          background-color: rgba($color, .1);
          color: $color;
        }

        &:focus,
        &.is-focused {
          background-color: rgba($color, 0.35);
        }

        &:active,
        &.is-active {
          background-color: rgba($color, 0.35);
        }
      }
    }
  }
}

.#{$namespace}-delete {
  background-color: rgba(10,10,10,0.2);
  border: none;
  border-radius: 290486px;
  cursor: pointer;
  display: inline-block;
  position: relative;
  height: 20px;
  width: 20px;
  max-height: 20px;
  max-width: 20px;
  min-height: 20px;
  min-width: 20px;
  transition: .3s;
  &:before, &:after {
		content: "";
		background-color: white;
    display: block;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transform-origin: center center;
    transition: .3s;
	}
  &.is-transparent {
    background-color: transparent;
    &:before, &:after {
      background-color: rgba(0,0,0,.5);
    }
    &:hover {
      &:before, &:after {
        background-color: white;
      }
    }
  }
	&:before {
		width: 50%;
		height: 2px;
	}
	&:after {
		height: 50%;
		width: 2px;
	}
	&:hover {
		background-color: rgba(10,10,10,0.4);
	}
	&.is-small {
		height: 16px;
    width: 16px;
    max-height: 16px;
    max-width: 16px;
    min-height: 16px;
    min-width: 16px;
	}
	&.is-large {
		height: 36px;
    width: 36px;
    max-height: 36px;
    max-width: 36px;
    min-height: 36px;
    min-width: 36px;
	}
}

.#{$namespace}-info {
  width: 20px;
  height: 20px;
	border-radius: 100%;
	margin-left: -.5em;
	margin-right: .5em;
	background-color: rgba(255,255,255,.8);
	border: 1px solid transparent;
	position: relative;
  outline: none;
  transition: .3s;
  color: $color-black;
  &:hover {
	  background-color: rgba(0,0,0,.1);
  }
  &.is-small {
  	width: 16px;
  	height: 16px;
  }
	&:before {
		content: '\e94f';
		font-family: 'hxui';
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%,-50%);
		font-size: 1rem;
	}
}

// Adjustment for vertical spacing
button.#{$namespace}-button,
input[type="submit"].button {
  line-height: 1;
  padding-bottom: 0.4em;
  padding-top: 0.35em;
}

// Button group
.#{$namespace}-button-group {
  display: flex;
  flex-direction: row;
  > .#{$namespace}-button {
    margin-right: 0;
    margin-left: -1px;
    padding-left: 1.15rem;
    padding-right: 1.15rem;
    border-radius: 0;
    letter-spacing: -.01em;
    font-weight: 300;

    &.is-light {
      border-left: 1px solid rgba($color-white, 1);
    }
    &.is-dark,
    &.is-black,
    &.is-success,
    &.is-primary,
    &.is-info,
    &.is-warning,
    &.is-danger {
      border-left: 1px solid rgba($color-white, .3);
    }

    &:first-child {
      border-top-left-radius: $border-radius-sm;
      border-bottom-left-radius: $border-radius-sm;

      &.is-light,
      &.is-dark,
      &.is-black,
      &.is-primary,
      &.is-success,
      &.is-info,
      &.is-warning,
      &.is-danger {
        border-left-color: transparent;
      }

    }
    &:last-child {
      border-top-right-radius: $border-radius-sm;
      border-bottom-right-radius: $border-radius-sm;
    }
    &:hover {
      z-index: 1;
    }

  }
  &.has-text-centered {
    justify-content: center;
  }
  &.has-text-right {
    justify-content: flex-end;
  }
  &.is-fullwidth {
    > .#{$namespace}-button {
      flex: 1 0 auto;
    }
    &.is-justified {
      > .#{$namespace}-button {
        flex: 1;
      }
    }
  }
}

.#{$namespace}-button-split{
  display: flex;
  .#{$namespace}-button:first-child{
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
    border-right:none;
  }
  .#{$namespace}-button:last-child{
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    width: 1rem;
    border-left-color: rgba(255,255,255,0.3);
  }
}
