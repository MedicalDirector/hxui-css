@use "../variables" as *;

@use "../mixins/gradient";
@use "../mixins/transition";
@use "../mixins/deprecate" as *;

@use "../functions/spacing";
@use "../functions/size";

///////////////////////
// SIDEBAR CONTAINER //
///////////////////////

.#{$namespace}-drawer__container {
  position: sticky;
  display: flex;
  z-index: var(--elevation-semantic-drawer);
  bottom: 0;

  &:not(.bottom) {
    top: 0;
    max-height: 100vh;
  }

  &:not(.right) {
    left: 0;
  }

  &.right,
  &.bottom {
    right: 0;
  }

  &.bottom {
    max-width: 100vw;
  }
}

/////////////
// OVERLAY //
/////////////

/* stylelint-disable-next-line scss/at-mixin-pattern */
@mixin _overlay {
  background-color: rgba(0, 0, 0, 0.8);
  z-index: -1;
  border: none;
  padding: 0;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  position: fixed;
}

.#{$namespace}-overlay {
  @include _overlay;
}

/////////////
// SIDEBAR //
/////////////

/* stylelint-disable-next-line scss/at-mixin-pattern */
@mixin _drawer {
  background-color: var(--color-surface-neutral-default);
  box-shadow: inset -1px 0 0 0 rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  flex: 1;

  @include transition.dimensions(300ms);

  position: relative;

  &.detached {
    position: absolute;
    left: 100%;
    max-height: 100vh;

    &.overlay:not(.collapsed)::after {
      content: "";
      @include _overlay;
    }
  }

  :where(.#{$namespace}-drawer__container).bottom & {
    box-shadow: inset 0 1px 0 0 rgba(0, 0, 0, 0.05);
    flex-direction: row;
    max-height: 40vh;
    transition-property: max-height;
    @include transition.propless(300ms);

    &:is(.is-collapsed, .collapsed, [aria-expanded="false"]) {
      max-height: 0;
    }

    &.detached {
      bottom: 100%;
      left: 0%;
      right: 0%;
    }
  }

  :where(.#{$namespace}-drawer__container):not(.bottom) & {
    height: 100%;
  }

  @include deprecate("2.0.0", "No longer part of HXUI") {
    &.is-expanded {
      width: ($hx-spacer * 50) !important;
      .#{$namespace}-nav-vertical {
        .#{$namespace}-nav-item {
          padding-left: 0;
          padding-right: 0;
        }
      }
    }
  }

  &.#{$namespace}-bg-primary-gradient,
  &.bg-primary-gradient {
    color: var(--color-foreground-contrast);

    hr {
      border-top: 1px solid rgba(255, 255, 255, 0.2);
    }
  }

  @include deprecate("2.0.0", "Use .bg-primary-decorative") {
    &.has-blue-gradient {
      @include gradient.radial(top, $hx-color-green-light, $hx-color-blue);

      color: #fff;

      hr {
        border-top: 1px solid rgba(255, 255, 255, 0.2);
      }
    }
  }

  @include deprecate("2.0.0", "No longer part of HXUI") {
    &.has-orange-gradient {
      @include gradient.radial(top, $hx-color-yellow-light, $hx-color-orange);

      color: #fff;

      hr {
        border-top: 1px solid rgba(255, 255, 255, 0.2);
      }
    }

    &.has-purple-gradient {
      @include gradient.radial(top, $hx-color-red-light, $hx-color-purple);

      color: #fff;

      hr {
        border-top: 1px solid rgba(255, 255, 255, 0.2);
      }
    }
  }
}

@include deprecate("3.0.0", "Use .hx-drawer") {
  .#{$namespace}-sidebar {
    @include _drawer;
  }
}

.#{$namespace}-drawer {
  @include _drawer;
}

//////////////////////
// SCROLL CONTAINER //
//////////////////////

:where(.#{$namespace}-sidebar, .#{$namespace}-drawer) {
  .#{$namespace}-drawer__scroll-container {
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  &:not(.collapsed) {
    .#{$namespace}-drawer__scroll-container {
      overflow-y: auto;
      overflow-x: hidden;
    }
  }

  &.collapsed {
    .#{$namespace}-drawer__scroll-container {
      overflow: hidden;
    }
  }
}

///////////////////
// TOGGLE BUTTON //
///////////////////

/* stylelint-disable-next-line scss/at-mixin-pattern */
@mixin _toggle {
  display: flex;
  border: 1px solid var(--color-foreground-contrast); //TODO: unhard
  position: absolute;
  top: size.px(12);
  z-index: 1;
  right: -1 * size.px(12);
  background-color: hsl(164, 96%, 21%); //TODO: unhard
  color: var(--color-foreground-contrast);
  border-radius: 4px;
  padding: size.px(1);
  cursor: pointer;

  &.bottom {
    top: unset;
    bottom: size.px(12);
  }

  &.right {
    right: unset;
    left: -1 * size.px(12);
  }
}

@include deprecate("3.0.0", "Use .hx-nav-toggle") {
  .#{$namespace}-nav-navicon {
    @include _toggle;
  }
}

.#{$namespace}-nav-toggle {
  @include _toggle;
}

/// LEGACY
@include deprecate("3.0.0", "Use .hx-drawer__container") {
  .#{$namespace}-nav-drawer {
    height: 100%;
    display: flex;
    z-index: 1;
    @media (max-width: 1264px) {
      position: fixed;
      z-index: 100;
    }

    > span {
      display: flex;
      height: 100vh;
      z-index: 1;

      > .#{$namespace}-nav {
        height: 100vh;
      }
    }

    .#{$namespace}-sidebar,
    .#{$namespace}-drawer {
      width: 17rem;
      height: 100%;
      max-height: calc(100% - 0px);
      display: block;
      top: 0;
      bottom: 0;
      transform: translateX(-100%);
      background-color: $hx-color-gray-lightest;
      padding: $hx-spacer 0;
      transition: 0.3s ease-in-out;
      box-shadow: inset -1px 0 0 0 rgba(0, 0, 0, 0.05);
      z-index: 1;

      &-bg {
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.8);
      }

      &.is-absolute {
        position: absolute;
      }

      &.is-fixed {
        position: fixed;
      }

      &.is-right {
        right: 0;
        transform: translateX(100%);
        box-shadow: inset 1px 0 0 0 rgba(0, 0, 0, 0.05);
      }

      &.is-active {
        transform: translateX(0%);
      }
    }
  }
}
