@use "sass:list";

@use "../variables" as *;
@use "../mixins/text";

@use "../mixins/deprecate" as *;

// Text colour modifiers
@each $label, $colour in $hx-colors {
  @include deprecate("3.0.0", "Use .text-{priority}") {
    .is-#{$label} {
      color: list.nth($colour, 1);
    }

    .is-text-#{$label} {
      color: list.nth($colour, 1) !important;
    }
  }

  .text-#{$label} {
    color: list.nth($colour, 1);
  }

  .\!text-#{$label} {
    color: list.nth($colour, 1) !important;
  }
}

///////////////
// Alignment //
///////////////

.has-text-centered,
.is-text-centered {
  text-align: center !important;
}

.text-center {
  text-align: center;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!text-center {
  text-align: center !important;
}

.has-text-left,
.is-text-left {
  text-align: left !important;
}

.text-left {
  text-align: left;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!text-left {
  text-align: left !important;
}

.has-text-right,
.is-text-right {
  text-align: right !important;
}

.text-right {
  text-align: right;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!text-right {
  text-align: right !important;
}

.is-text-justify {
  text-align: justify !important;
}

.text-justify {
  text-align: justify;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!text-justify {
  text-align: justify !important;
}

.is-text-nowrap,
.text-nowrap {
  white-space: nowrap !important;
}

.is-text-truncate,
.text-truncate {
  @include text.truncate;
}

///////////////
// Transform //
///////////////

.is-text-lowercase,
.text-lowercase {
  text-transform: lowercase !important;
}

.is-text-uppercase,
.text-uppercase {
  text-transform: uppercase !important;
}

.is-text-capitalise,
.text-capitalise {
  text-transform: capitalize !important;
}

// Dedcoration
.is-text-line-through,
.text-line-through {
  text-decoration: line-through !important;
}

.is-text-underline,
.text-underline {
  text-decoration: underline !important;
}

.is-text-dotted,
.text-dotted {
  text-decoration: underline dotted !important;
}

.is-text-italic,
.text-italic {
  font-style: italic !important;
}

// Font weights
@include deprecate("3.0.0", "Use .font-light or remove") {
  .is-text-weight-light {
    font-weight: 300 !important;
  }
}

.font-light {
  font-weight: 300;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!font-light {
  font-weight: 300 !important;
}

@include deprecate("3.0.0", "Use .font-normal or remove") {
  .is-text-weight-normal {
    font-weight: 400 !important;
  }
}

.font-normal {
  font-weight: 400;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!font-normal {
  font-weight: 400 !important;
}

@include deprecate("3.0.0", "Use .font-normal or remove") {
  .is-text-weight-bold {
    font-weight: 400 !important;
  }
}

@include deprecate("3.0.0", "Use .font-medium") {
  .is-text-weight-bolder {
    font-weight: 500 !important;
  }
}

.font-medium {
  font-weight: 500;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!font-medium {
  font-weight: 500 !important;
}

@include deprecate("3.0.0", "Use .font-bold") {
  .is-text-weight-boldest {
    font-weight: 700 !important;
  }
}

.font-semibold {
  font-weight: 600;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!font-semibold {
  font-weight: 600 !important;
}

@include deprecate("3.0.0", "Use .font-bold") {
  .is-text-bold {
    font-weight: 700 !important;
  }
}

.font-bold {
  font-weight: 700;
}

/* stylelint-disable-next-line selector-class-pattern */
.\!font-bold {
  font-weight: 700 !important;
}

// Text

.is-unselectable,
.is-text-unselectable {
  @include text.no-copy;
}

.is-selectall,
.is-text-select-all {
  @include text.all-copy;
}

.is-elipsed,
.is-text-elipsed,
.is-text-ellipsed,
.is-text-ellipsis {
  @include text.truncate;
}

table th,
table td {
  &.is-text-elipsed,
  &.is-elipsed,
  &.is-text-ellipsed,
  &.is-text-ellipsis {
    position: relative;
    min-width: 0;
  }
}

.is-text-multiline {
  @include text.multiline;
}

.is-text-line-clamp-1 {
  @include text.line-clamp(1);
}

@for $i from 1 through 6 {
  .is-text-line-clamp-#{$i} {
    @include text.line-clamp($i);
  }
}
