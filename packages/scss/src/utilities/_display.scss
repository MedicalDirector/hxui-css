/* stylelint-disable selector-class-pattern */
/////////////
// DISPLAY //
/////////////

@use "../variables" as *;
@use "../mixins/position";
@use "../mixins/breakpoint";

@use "../mixins/deprecate" as *;

///////////
// Float //
///////////

.is-clearfix {
  &::after {
    clear: both;
    content: " ";
    display: table;
  }
}

.is-pulled-left {
  float: left;
}

.is-pulled-right {
  float: right;
}

//////////////
// Overflow //
//////////////

.is-clipped {
  overflow: hidden !important;
}

/////////////
// Display //
/////////////

.is-overlay {
  @include position.overlay;
}

.is-vertical-align-bottom {
  vertical-align: bottom !important;
}

.is-vertical-align-top {
  vertical-align: top !important;
}

.is-vertical-align-middle {
  vertical-align: middle !important;
}

/* stylelint-disable-next-line scss/at-mixin-pattern */
@mixin _displays($b: "") {
  $displays: "hidden" "block" "flex" "inline" "inline-block" "inline-flex" "contents" "grid" "inline-grid";

  @if $b == "" {
    @each $display in $displays {
      .#{$display} {
        @if $display == "hidden" {
          display: none;
        } @else {
          display: #{$display};
        }
      }

      .is-#{$display},
      .\!#{$display} {
        @if $display == "hidden" {
          display: none !important;
        } @else {
          display: #{$display} !important;
        }
      }
    }
  } @else {
    @each $display in $displays {
      .#{$b}\:#{$display} {
        @if $display == "hidden" {
          display: none;
        } @else {
          display: #{$display};
        }
      }

      .#{$b}\:is-#{$display},
      .#{$b}\:\!#{$display} {
        @if $display == "hidden" {
          display: none !important;
        } @else {
          display: #{$display} !important;
        }
      }
    }
  }
}

@include _displays;

/// mobile and above
@include breakpoint.mobile {
  @include _displays("mobile");
}

/// tablet and above
@include breakpoint.tablet {
  @include _displays("tablet");
}

/// desktop and above
@include breakpoint.desktop {
  @include _displays("desktop");
}

/// widescreen and above
@include breakpoint.widescreen {
  @include _displays("widescreen");
}

/// fullhd and above
@include breakpoint.fullhd {
  @include _displays("fullhd");
}

////////////////
// Visibility //
////////////////

$hx-lt-desktop: $hx-desktop - 1px;
$hx-lt-widescreen: $hx-widescreen - 1px;
$hx-lt-fullhd: $hx-fullhd - 1px;

// TODO: reinstate and call as hidden-down - not best practice to design down; should design up

// @include deprecate("2.0.0", "Use other display utils instead") {
//   .is-hidden,
//   .hidden {
//     display: none;
//   }

//   .\!hidden {
//     display: none !important;
//   }

//   .is-hidden-mobile,
//   .mobile\:\!hidden {
//     @include breakpoint.mobile {
//       display: none !important;
//     }
//   }

//   .mobile\:hidden {
//     @include breakpoint.mobile {
//       display: none;
//     }
//   }

//   .is-hidden-tablet,
//   .tablet\:\!hidden {
//     @media screen and (max-width: $hx-lt-desktop) {
//       display: none !important;
//     }
//   }

//   .tablet\:hidden {
//     @media screen and (max-width: $hx-lt-desktop) {
//       display: none;
//     }
//   }

//   .is-hidden-desktop,
//   .desktop\:\!hidden {
//     @media screen and (max-width: $hx-lt-widescreen) {
//       display: none !important;
//     }
//   }

//   .desktop\:hidden {
//     @media screen and (max-width: $hx-lt-widescreen) {
//       display: none;
//     }
//   }

//   .is-hidden-widescreen,
//   .widescreen\:\!hidden {
//     @media screen and (max-width: $hx-lt-fullhd) {
//       display: none !important;
//     }
//   }

//   .widescreen\:hidden {
//     @media screen and (max-width: $hx-lt-fullhd) {
//       display: none;
//     }
//   }
// }
