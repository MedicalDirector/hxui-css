////////////////
//  CHECKBOX  //
////////////////

@use "../../variables" as *;
@use "../../mixins/text";
@use "../../functions/spacing";
@use "../../functions/size";

/// MODERN
.#{$namespace}-checkbox {
  :where(.#{$namespace}-form-control) & {
    font: var(--b1, inherit);
    align-items: center;
    gap: spacing.px(2);
    border-radius: 2px;
    height: size.rem(32);
    display: flex;

    &:has(:focus-visible) {
      outline-offset: 2px;
      outline: var(--color-action-focus-ring) solid 2px; //TODO: unhard
    }

    &:not(input) {
      font: var(--b1, inherit);
      padding-right: spacing.rem(2);
    }

    input[type="checkbox"] {
      appearance: none;
      margin: 0 0 0 spacing.rem(2);
      color: $hx-color-gray-lighter; //TODO: unhard
      width: size.rem(20);
      height: size.rem(20);
      border: 2px solid $hx-color-gray-lighter; //TODO: unhard
      background-color: hsl(0, 0%, 100%); //TODO: unhard
      display: inline-grid;
      place-content: center;

      /* stylelint-disable-next-line declaration-empty-line-before */
      border-radius: 2px;
      transition-property: background-color, border-color;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;

      ////////////
      // STATES //
      ////////////

      &:focus,
      &:focus-visible {
        outline: none;
      }

      /// UNCHECKED
      &::before {
        content: "";
        width: size.rem(16);
        height: size.rem(16);
        transform: scale(0);
        transition-property: transform, clip-path;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 100ms;
        box-shadow: inset 1rem 1rem white; //$hx-color-primary;

        /* stylelint-disable-next-line declaration-empty-line-before */
        // clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
        // clip-path: polygon(14.2% 48.77%, 0% 65%, 34.93% 95.56%, 100% 15%, 82.44% 0.82%, 31.49% 63.9%);
        clip-path: polygon(10.46% 53.05%, 0% 65%, 34.93% 95.56%, 100% 15%, 88.13% 5.41%, 33.42% 73.14%);
        transform-origin: center;
      }

      /// CHECKED
      &:checked {
        background-color: $hx-color-primary;
        border-color: $hx-color-primary;

        &::before {
          transform: scale(1);
        }
      }

      /// INDETERMINATE
      &:indeterminate,
      &.indeterminate {
        background-color: $hx-color-primary;
        border-color: $hx-color-primary;

        &::before {
          content: "";
          clip-path: polygon(0% 43.75%, 100% 43.75%, 100% 56.25%, 0% 56.25%);
          transform: scale(1);
        }
      }

      /// DISABLED, UNCHECKED, INDETERMINATE
      &[disabled] {
        border-color: $hx-input-disabled;
        background-color: $hx-input-disabled;
        cursor: $hx-cursor-disabled;
        transition: none;
      }

      /// DISABLED, CHECKED
      &[disabled]:checked::before {
        transition: none;
      }
    }
  }

  /// INVALID
  :where(.#{$namespace}-form-control):has(.ng-invalid.ng-dirty:not(.disabled, [disabled])) &,
  :where(.#{$namespace}-form-control).invalid:not(:has(.disabled, [disabled])) & {
    color: var(--color-foreground-danger);

    input[type="checkbox"] {
      border-color: var(--color-foreground-danger);

      &:checked,
      &:indeterminate,
      &.indeterminate {
        background-color: var(--color-foreground-danger);
      }
    }
  }

  ///////////////
  // MODIFIERS //
  ///////////////

  /// NOT STACKED
  :where(.#{$namespace}-form-control):not(.stack) > & {
    display: inline-flex;

    &:not(:last-of-type) {
      margin-right: spacing.rem(2); // already effectively applying "2" from right item padding
    }
  }

  /// STACKED
  :where(.#{$namespace}-form-control).stack > & {
    display: flex;

    &:not(:last-of-type) {
      margin-bottom: spacing.rem(1);
    }
  }

  // TODO: invalid styles?
}

////////////
// LEGACY //
////////////

// Checkbox container
.#{$namespace}-checkbox-control {
  margin: 0.4rem 0;
}

// Checkbox Styles
/* stylelint-disable-next-line no-duplicate-selectors */
.#{$namespace}-checkbox {
  :where(.#{$namespace}-checkbox-control) & {
    /* Remove default checkbox */
    &:not(:checked),
    &:checked {
      position: absolute;
      left: -9999px;
      opacity: 0;
    }

    // Text Label Style
    + .#{$namespace}-label {
      position: relative;
      padding-left: 32px;
      cursor: pointer;
      display: inline-block;
      height: 23px;
      line-height: 23px;
      font-size: $hx-font-form-elements-size;
      font-weight: normal;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      @include text.no-copy;

      &.is-text-multiline {
        @include text.multiline;
      }
    }

    /* checkbox aspect */
    + .#{$namespace}-label:before,
    + .#{$namespace}-label:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 18px;
      height: 18px;
      z-index: 1;
      border: 2px solid $hx-color-gray-lighter;
      border-radius: 1px;
      margin-top: 2px;
      transition: 0.2s;
    }

    &:disabled + .#{$namespace}-label {
      cursor: $hx-cursor-disabled;
      color: $hx-color-gray-lighter !important;
    }

    &:not(:checked):disabled + .#{$namespace}-label:before {
      border: none;
      background-color: $hx-input-disabled;
      cursor: $hx-cursor-disabled;
    }

    &:indeterminate,
    &.is-indeterminate {
      + .#{$namespace}-label:before {
        top: 2px;
        left: 2.5px;
        width: 13px;
        height: 8px;
        border-bottom: 2px solid white;
        border-width: 0 0 2px;
      }

      + .#{$namespace}-label:after {
        top: 0;
        width: 18px;
        height: 18px;
        border: 2px solid $hx-color-primary;
        background-color: $hx-color-primary;
        z-index: 0;
      }
    }

    &:checked {
      + .#{$namespace}-label:before {
        top: 2px;
        left: 1px;
        width: 7px;
        height: 12px;
        border-top: 2px solid transparent;
        border-left: 2px solid transparent;
        border-right: 2px solid white;
        border-bottom: 2px solid white;
        -webkit-transform: rotateZ(37deg);
        transform: rotateZ(37deg);
        -webkit-transform-origin: 100% 100%;
        transform-origin: 100% 100%;
      }

      + .#{$namespace}-label:after {
        top: 0;
        width: 18px;
        height: 18px;
        border: 2px solid $hx-color-primary;
        background-color: $hx-color-primary;
        z-index: 0;
      }

      &:disabled + .#{$namespace}-label:before {
        border-right: 2px solid $hx-input-disabled;
        border-bottom: 2px solid $hx-input-disabled;
      }
    }
  }
}

// TABLE STYLING
// TODO: update

/// is-small checkbox
.#{$namespace}-input-control.is-small,
.#{$namespace}-table.is-narrow {
  // Checkbox container
  .#{$namespace}-checkbox-control {
    margin: 0.4rem 0;
  }

  // Checkbox Styles
  .#{$namespace}-checkbox {
    // Text Label Style
    + .#{$namespace}-label {
      padding-left: 25px;
      height: 20px;
      line-height: 20px;
      font-size: 0.9rem;

      &.is-text-multiline {
        @include text.multiline;
      }
    }

    /* checkbox aspect */
    + .#{$namespace}-label:before,
    + .#{$namespace}-label:after {
      width: 16px;
      height: 16px;
      margin-top: 2px;
    }

    /* small indeterminate checkbox */
    &:indeterminate,
    &.is-indeterminate:not(:checked) {
      + .#{$namespace}-label:before {
        top: 1px;
        left: 2px;
        width: 12px !important;
        height: 8px;
      }
    }
  }

  th {
    .#{$namespace}-checkbox-control {
      padding-bottom: 0.1rem;
    }
    .#{$namespace}-checkbox {
      + .#{$namespace}-label {
        font-size: 0.75rem;
        font-weight: 700;
      }
    }
  }

  .#{$namespace}-table-group {
    th {
      .#{$namespace}-checkbox-control {
        padding: 0;
        margin-top: -0.01rem;
      }
    }
  }

  .#{$namespace}-checkbox:checked {
    + .#{$namespace}-label:before {
      top: 2px;
      left: 2px;
      width: 5px;
      height: 10px;
    }

    + .#{$namespace}-label:after {
      top: 0;
      width: 16px;
      height: 16px;
    }
  }
}
