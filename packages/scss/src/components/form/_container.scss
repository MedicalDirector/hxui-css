////////////
//  FORM  //
////////////

@use "../../variables" as *;
@use "../../mixins/text";
@use "../../functions/spacing";
@use "../../functions/size";

//////////////////
// FORM CONTROL //
//////////////////

.#{$namespace}-form-control {
  &.block {
    margin-bottom: spacing.rem(4);
  }

  &.fullwidth {
    width: 100%;
  }
}

// Container within hx-columns
// TODO: gracefully deprecate
.#{$namespace}-columns {
  .#{$namespace}-input-control {
    margin-bottom: 0;
  }
}

// Container
// TODO: gracefully deprecate and rely on form control
.#{$namespace}-input-control {
  position: relative;
  margin-bottom: 2rem;

  &.is-medium {
    $medium: 1.5;

    .#{$namespace}-input,
    .#{$namespace}-textarea {
      padding: (0.8rem * $medium) 0 (0.6rem * $medium);
      font-size: ($hx-font-form-elements-size * $medium);

      & + .#{$namespace}-label {
        top: (0.7rem * $medium);
        font-size: ($hx-font-form-elements-size * $medium);

        sup {
          font-size: (0.7rem * $medium);
        }

        & + .#{$namespace}-help {
          font-size: (0.75rem * $medium);
          margin-top: (0.25rem * $medium);

          &::before,
          &::after {
            top: (-0.35rem * $medium);
          }
        }
      }

      &:focus ~ .#{$namespace}-label,
      &:valid ~ .#{$namespace}-label,
      &:-webkit-autofill ~ .#{$namespace}-label {
        top: (-0.6rem);
        font-size: ($hx-font-form-elements-size);

        sup {
          font-size: (0.4rem * $medium);
        }
      }

      &[disabled],
      &.is-disabled {
        & ~ .#{$namespace}-label {
          // top: -.5rem;
          // font-size: .75rem;

          sup {
            // font-size: .4rem;
          }
        }
      }
    }
  }

  &.is-large {
    $large: 2;

    .#{$namespace}-input,
    .#{$namespace}-textarea {
      padding: (0.8rem * $large) 0 (0.6rem * $large);
      font-size: ($hx-font-form-elements-size * $large);

      & + .#{$namespace}-label {
        top: (0.7rem * $large);
        font-size: ($hx-font-form-elements-size * $large);

        sup {
          font-size: (0.7rem * $large);
        }

        & + .#{$namespace}-help {
          font-size: (0.75rem * $large);
          margin-top: (0.25rem * $large);

          &::before,
          &::after {
            top: (-0.35rem * $large);

            // height: (3px * $large);
          }
        }
      }

      &:focus ~ .#{$namespace}-label,
      &:valid ~ .#{$namespace}-label,
      &:-webkit-autofill ~ .#{$namespace}-label {
        top: (-0.5rem);
        font-size: calc(2rem / #{$large});

        sup {
          font-size: (0.4rem * $large);
        }
      }

      &[disabled],
      &.is-disabled {
        & ~ .#{$namespace}-label {
          // top: -.5rem;
          // font-size: .75rem;

          sup {
            // font-size: .4rem;
          }
        }
      }
    }
  }

  &.is-success {
    input,
    textarea {
      & + .#{$namespace}-label {
        color: $hx-color-success;

        & + .#{$namespace}-help {
          position: relative;
          opacity: 1;
          color: $hx-color-success;

          &::before,
          &::after {
            width: 50%;
            background-color: $hx-color-success;
          }
        }
      }
    }
  }

  &.is-info {
    input,
    textarea {
      & + .#{$namespace}-label {
        color: $hx-color-info;

        & + .#{$namespace}-help {
          position: relative;
          opacity: 1;
          color: $hx-color-info;

          &::before,
          &::after {
            width: 50%;
            background-color: $hx-color-info;
          }
        }
      }
    }
  }

  &.is-warning {
    input,
    textarea {
      & + .#{$namespace}-label {
        color: $hx-color-warning;

        & + .#{$namespace}-help {
          position: relative;
          opacity: 1;
          color: $hx-color-warning;

          &::before,
          &::after {
            width: 50%;
            background-color: $hx-color-warning;
          }
        }
      }
    }
  }

  &.is-danger {
    input,
    textarea {
      & + .#{$namespace}-label:not(.no-context) {
        color: $hx-color-danger;

        & + .#{$namespace}-help {
          position: relative;
          opacity: 1;
          color: $hx-color-danger;

          .#{$namespace}-label {
            color: $hx-color-gray;
          }

          &::before,
          &::after {
            width: 50%;
            background-color: $hx-color-danger;
          }
        }
      }
    }
  }

  &.is-help-visible {
    input,
    textarea {
      & + .#{$namespace}-label {
        & + .#{$namespace}-help {
          position: relative;
          opacity: 1;
        }
      }
    }
  }

  &.has-text-centered {
    .#{$namespace}-label {
      left: 50%;
      transform: translateX(-50%);
    }

    .#{$namespace}-input {
      text-align: center;
    }
  }

  .#{$namespace}-input {
    &.ng-invalid.ng-dirty {
      & + .#{$namespace}-label {
        color: $hx-color-danger;

        & + .#{$namespace}-help {
          position: relative;
          opacity: 1;
          color: $hx-color-danger;

          &::before,
          &::after {
            width: 50%;
            background-color: $hx-color-danger;
          }
        }
      }
    }

    &::-webkit-input-placeholder {
      /* Chrome/Opera/Safari */
      color: $hx-color-gray-lighter;
    }

    &::-moz-placeholder {
      /* Firefox 19+ */
      color: $hx-color-gray-lighter;
    }

    &:-ms-input-placeholder {
      /* IE 10+ */
      color: $hx-color-gray-lighter;
    }

    &:-moz-placeholder {
      /* Firefox 18- */
      color: $hx-color-gray-lighter;
    }
  }

  .#{$namespace}-textarea {
    & + .#{$namespace}-label {
      & + .#{$namespace}-help {
        margin-bottom: 3rem;
      }
    }

    &.ng-invalid.ng-dirty {
      & + .#{$namespace}-label {
        color: $hx-color-danger;

        & + .#{$namespace}-help {
          position: relative;
          opacity: 1;
          color: $hx-color-danger;

          &::before,
          &::after {
            width: 50%;
            background-color: $hx-color-danger;
          }
        }
      }
    }

    &::-webkit-input-placeholder {
      /* Chrome/Opera/Safari */
      color: $hx-color-gray-lighter;
    }

    &::-moz-placeholder {
      /* Firefox 19+ */
      color: $hx-color-gray-lighter;
    }

    &:-ms-input-placeholder {
      /* IE 10+ */
      color: $hx-color-gray-lighter;
    }

    &:-moz-placeholder {
      /* Firefox 18- */
      color: $hx-color-gray-lighter;
    }
  }
}

// TODO: gracefully deprecate
// Group Container
.#{$namespace}-input-group {
  position: relative;

  > .#{$namespace}-icon,
  > .#{$namespace}-input-actions {
    position: absolute;
    top: 0.5rem;
    z-index: 1;

    > .#{$namespace}-loader {
      position: absolute;
      right: 0.325rem;
      top: 0.326rem;
      z-index: 1;
    }
  }

  // select icon|button after hx-input-control
  .#{$namespace}-input-control + .#{$namespace}-icon,
  .#{$namespace}-input-control + .#{$namespace}-input-actions {
    right: 0;
  }

  /// select icon|button before hx-input-control
  .#{$namespace}-icon ~ .#{$namespace}-input-control,
  .#{$namespace}-input-actions ~ .#{$namespace}-input-control {
    left: 0;
    .#{$namespace}-input {
      padding-right: 1.8rem;
    }
    .#{$namespace}-label {
      margin-right: 1.8rem;
    }
  }

  // select hx-input-control after icon|button
  .#{$namespace}-icon + .#{$namespace}-input-control,
  .#{$namespace}-actions + .#{$namespace}-input-control {
    .#{$namespace}-input {
      padding-left: 1.8rem;
    }
    .#{$namespace}-label {
      margin-left: 1.8rem;
    }
  }
}

/////////////////
// INPUT GROUP //
/////////////////
///
/// Not a substitute for wrapping label, input and help
/// For wrapping input directly and
/// customising input with leading and lagging icons and buttons
///
/// GOOD:
/// <div class="hx-form-control">
///   <label />
///   <div class="hx-input-group">
///     <i />
///     <input />
///     <button />
///   </div>
///   <span />
/// </div>
///
/// GOOD:
/// <div class="hx-form-control">
///   <label />
///   <input />
///   <span />
/// </div>
///
///
/// BAD:
/// <div class="hx-input-group">
///   <label />
///   <input />
///   <span />
/// </div>
///

/* stylelint-disable-next-line no-duplicate-selectors */
.#{$namespace}-input-group {
  :where(.#{$namespace}-form-control) &,
  &.modern {
    // for text inputs and textareas
    &:has(.#{$namespace}-input) {
      align-items: center;
      flex-wrap: nowrap;
      border-radius: 2px; //TODO: unhard
      background-color: #fafafa; //TODO: unhard
      box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.08); //rgba(0, 0, 0, 0.2); //var(--color-border-default);

      &:focus-within {
        box-shadow: 0 0 0 1px var(--color-border-accent-emphasis);
        outline-offset: 0;
        outline: var(--color-border-accent-emphasis) solid 2px; //TODO: unhard
      }
    }

    // start icon, specifically not targeting buttons
    > .#{$namespace}-icon-control {
      display: inline-flex;
      padding: 0 0 0 spacing.px(2);
    }

    // end icon, specifically not targeting buttons
    > .#{$namespace}-input + .#{$namespace}-icon-control {
      padding: 0 spacing.px(2) 0 0;
    }

    .#{$namespace}-input {
      border: none;
      background-color: transparent;

      &:focus,
      &:focus-visible {
        outline: 0;
      }
    }

    // actions
    .#{$namespace}-button {
      &:focus-visible {
        outline-offset: 0;
        outline-color: var(--color-border-accent-emphasis);
      }
    }

    ///////////////
    // MODIFIERS //
    ///////////////

    /// DEFAULT
    &:not(.fullwidth) {
      display: inline-flex;
      min-width: 300px;
    }

    /// FULLWIDTH
    &.fullwidth {
      display: flex;
      flex-grow: 1;
      min-width: unset;
    }

    /// INLINE (for radios and checkboxes)
    &:not(.inline):has(.#{$namespace}-radio, .#{$namespace}-checkbox) {
      display: flex;
      flex-direction: column;
      gap: spacing.rem(1);
    }

    &.inline {
      display: flex;
      flex-direction: row;
      gap: spacing.rem(4);
    }
  }

  /// FULLWIDTH
  :where(.#{$namespace}-form-control).fullwidth & {
    display: flex;
    flex-grow: 1;
  }

  ////////////
  // STATES //
  ////////////

  /// DISABLED
  :where(.#{$namespace}-form-control) &:has([disabled]),
  :where(.#{$namespace}-form-control).disabled {
    cursor: not-allowed;
  }

  /// INVALID
  :where(.#{$namespace}-form-control).invalid &,
  :where(.#{$namespace}-form-control) &:has(.ng-invalid.ng-dirty:not(.disabled, [disabled])) {
    // for Angular
    // for text inputs and textareas
    &:has(.#{$namespace}-input) {
      box-shadow: 0 0 0 1px var(--color-border-danger-emphasis);

      &:focus-within {
        outline-offset: 0;
        outline: var(--color-border-danger-emphasis) solid 2px; //TODO: unhard
      }
    }
  }
}
