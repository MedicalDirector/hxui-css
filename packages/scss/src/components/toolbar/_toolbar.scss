///////////////
//  TOOLBAR  //
///////////////

@use "../../variables" as *;
@use "../../functions/spacing";
@use "../../functions/size";

.#{$namespace}-toolbar.next {
  display: flex;
  align-items: center;
  gap: spacing.px(2);
  border-width: 1px 0;
  border-color: transparent;
  border-style: solid;

  ///////////
  // SIZES //
  ///////////

  // default
  padding: size.rem(7) spacing.px(4);

  &.comfortable {
    padding: size.rem(15) spacing.px(4);
  }

  &.compact {
    padding: spacing.rem(0) spacing.px(4);
  }

  ///////////////
  // MODIFIERS //
  ///////////////

  // perforated borders
  &.is-perforated,
  &.perforated-b,
  &.perforated:not(:last-of-type) {
    border-bottom: 1px dashed $hx-border-color;
  }

  &.perforated-t {
    border-top: 1px dashed $hx-border-color;
  }

  // solid borders
  &.is-divided,
  &.solid-t,
  &.solid:not(:first-of-type) {
    border-top: 1px solid $hx-border-color;
  }

  &.solid-b {
    border-bottom: 1px solid $hx-border-color;
  }
}

//////////////
//  APPBAR  //
//////////////
///
.#{$namespace}-bar {
  display: flex;
  align-items: center;
  border-width: 1px 0;
  border-color: transparent;
  border-style: solid;
  flex: 1;

  ///////////////
  // MODIFIERS //
  ///////////////

  // perforated borders
  &.is-perforated,
  &.perforated-b,
  &.perforated:not(:last-of-type) {
    border-bottom: 1px dashed $hx-border-color;
  }

  &.perforated-t {
    border-top: 1px dashed $hx-border-color;
  }

  // solid borders
  &.is-divided,
  &.solid-t,
  &.solid:not(:first-of-type) {
    border-top: 1px solid $hx-border-color;
  }

  &.solid-b {
    border-bottom: 1px solid $hx-border-color;
  }

  .#{$namespace}-bar__title,
  .#{$namespace}-bar__actions {
    display: flex;
    align-items: center;
    gap: spacing.px(2);
    flex-flow: row nowrap;
  }
}

:where(.#{$namespace}-bar).app {
  justify-content: space-between;
  padding: size.rem(11) spacing.px(4);
  background-color: var(--color-surface-neutral-default);
  gap: spacing.px(2);

  &.comfortable {
    padding: size.rem(11) spacing.px(4) size.rem(11) spacing.px(6);
  }

  &:not(:has(+ .#{$namespace}-bar.sub)) {
    border-bottom: 1px solid $hx-border-color;
  }

  :where(h1, h2, h3, h4, h5, h6) {
    font: var(--h2);
  }
}

:where(.#{$namespace}-bar).sub,
.#{$namespace}-toolbar.next {
  gap: spacing.px(2);
  background-color: var(--color-surface-neutral-default);

  ///////////
  // SIZES //
  ///////////

  // default
  padding: size.rem(7) spacing.px(4);

  &.comfortable {
    padding: size.rem(15) spacing.px(4);
  }

  &.compact {
    padding: spacing.rem(0) spacing.px(4);
  }
}

:where(.#{$namespace}-bar).dialog {
  justify-content: space-between;
  padding: size.rem(11) spacing.px(4);

  :where(h1, h2, h3, h4, h5, h6) {
    font: var(--h2);
  }
}

:where(.#{$namespace}-bar).footer {
  padding: size.rem(15) spacing.px(4);
  justify-content: flex-end;
  gap: spacing.px(2);
}

/// LEGACY
.#{$namespace}-toolbar:not(.next) {
  display: flex;
  align-items: center;
  padding: $hx-spacer;
  background-color: transparent;

  > span {
    color: $hx-color-gray-lighter;
    font-weight: normal;
    text-transform: uppercase;
    font-size: 0.85rem;
  }

  // Contextual themes
  &.is-primary {
    background-color: $hx-color-primary;

    > span {
      color: rgba(255, 255, 255, 0.8);
    }

    button,
    a {
      color: #fff;
    }

    &.is-inverted {
      background-color: transparent;

      > span {
        color: rgba($hx-color-primary, 0.8);
      }

      button,
      a {
        color: $hx-color-primary;
      }
    }
  }

  &.is-warning {
    background-color: $hx-color-warning;

    > span {
      color: rgba(255, 255, 255, 0.8);
    }

    button,
    a {
      color: #fff;
    }

    &.is-inverted {
      background-color: transparent;

      > span {
        color: rgba($hx-color-warning, 0.8);
      }

      button,
      a {
        color: $hx-color-warning;
      }
    }
  }

  &.is-danger {
    background-color: $hx-color-danger;

    > span {
      color: rgba(255, 255, 255, 0.8);
    }

    button,
    a {
      color: #fff;
    }

    &.is-inverted {
      background-color: transparent;

      > span {
        color: rgba($hx-color-danger, 0.8);
      }

      button,
      a {
        color: $hx-color-danger;
      }
    }
  }

  &.is-info {
    background-color: $hx-color-info;

    > span {
      color: rgba(255, 255, 255, 0.8);
    }

    button,
    a {
      color: #fff;
    }

    &.is-inverted {
      background-color: transparent;

      > span {
        color: rgba($hx-color-info, 0.8);
      }

      button,
      a {
        color: $hx-color-info;
      }
    }
  }

  // size
  &.is-small {
    padding: 0.5rem;
  }

  &.is-xsmall {
    padding: 0;

    & > span {
      padding-left: 0.5rem;
    }
  }
}
