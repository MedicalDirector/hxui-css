////////////
// ICONS  //
////////////

@use "../../variables" as *;

@use "../../functions/size";

@use "../../mixins/deprecate" as *;

@use "../../mixins/size" as msize;

@mixin icon-sm {
  font-size: size.rem(16); // TODO: unhard
  // width: 1.25rem;
  // height: 1.25rem;
}

@mixin icon-md {
  font-size: size.rem(20); // TODO: unhard
  // width: 1.5rem;
  // height: 1.5rem;
}

/// @usage nested inside .hx-button
/// lower specificity than
///
:where(.#{$namespace}-button) {
  .#{$namespace}-icon {
    @include icon-md;

    line-height: size.rem(24); // TODO: unhard
  }

  @include msize.md {
    .#{$namespace}-icon {
      @include icon-md;

      line-height: size.rem(24); // TODO: unhard
    }
  }

  @include msize.sm {
    .#{$namespace}-icon {
      @include icon-sm;

      line-height: size.rem(20); // TODO: unhard
    }
  }
}

:is(.#{$namespace}-badge) {
  .#{$namespace}-icon {
    font-size: size.rem(12);
  }

  @include msize.lg {
    .#{$namespace}-icon {
      @include icon-sm;
    }
  }
}

:where(.#{$namespace}-button).sm {
  .#{$namespace}-icon {
    @include icon-sm;

    line-height: 1.25rem; // TODO: unhard
  }
}

:where(.#{$namespace}-button).md {
  .#{$namespace}-icon {
    @include icon-md;

    line-height: 1.5rem; // TODO: unhard
  }
}

:where(.#{$namespace}-button).lg {
  .#{$namespace}-icon {
    @include icon-md;

    line-height: 1.5rem; // TODO: unhard
  }
}

:where(.#{$namespace}-avatar) {
  .#{$namespace}-icon {
    @include icon-md;
  }

  @include msize.sm {
    .#{$namespace}-icon {
      @include icon-sm;
    }
  }

  @include msize.md {
    .#{$namespace}-icon {
      @include icon-md;
    }
  }

  @include msize.lg {
    .#{$namespace}-icon {
      @include icon-md;
    }
  }
}

:where(.#{$namespace}-dropdown-item) {
  .#{$namespace}-icon {
    @include icon-md;

    line-height: 1.5rem; // TODO: unhard
  }
}

:where(.#{$namespace}-icon-container) .#{$namespace}-icon {
  // harsh but icons alone are decorative and otherwise degrade
  // experience for those relying on screen readers
  &:not(:where([aria-hidden="true"])) {
    display: none;
  }

  display: inline-flex;
  justify-content: center;
  align-items: center;

  ///////////
  // Sizes //
  ///////////

  /// Size: Medium is default
  @include icon-md;

  @include deprecate("3.0.0", "Use .sm instead") {
    &.is-small {
      @include icon-sm;
    }
  }

  @include deprecate("3.0.0", "Use custom css") {
    &.is-medium {
      font-size: 28px;
      width: 2rem;
      height: 2rem;
    }
  }

  @include deprecate("3.0.0", "Use custom css") {
    &.is-large {
      font-size: 42px;
      width: 3rem;
      height: 3rem;
    }
  }

  @include msize.sm {
    @include icon-sm;
  }

  @include msize.md {
    @include icon-md;
  }
}

@include deprecate("2.0.0", "Use .hx-icon") {
  .icon {
    font-size: 21px;

    &.is-small {
      font-size: 14px;
    }

    &.is-medium {
      font-size: 28px;
    }

    &.is-large {
      font-size: 42px;
    }
  }
}

.#{$namespace}-icon-container {
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
